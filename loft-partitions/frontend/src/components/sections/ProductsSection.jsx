import React, { useState, useMemo } from 'react';
import { useProducts, useCategories } from '../../hooks/useApi';
import ProductCard from '../ui/ProductCard';
import ProductFilters from '../ui/ProductFilters';
import LoadingSpinner from '../ui/LoadingSpinner';

const ProductsSection = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [selectedCategory, setSelectedCategory] = useState('');
  const [priceRange, setPriceRange] = useState('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const { data: allProducts, loading: productsLoading, error: productsError } = useProducts();
  const { data: categories, loading: categoriesLoading } = useCategories();

  // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
  const filteredProducts = useMemo(() => {
    if (!allProducts) return [];

    let filtered = [...allProducts];

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if (selectedCategory) {
      filtered = filtered.filter(product =>
        product.category.toString() === selectedCategory
      );
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ü–µ–Ω–µ
    if (priceRange) {
      const [min, max] = priceRange.split('-').map(Number);
      if (max) {
        filtered = filtered.filter(product =>
          product.price >= min && product.price <= max
        );
      } else {
        filtered = filtered.filter(product => product.price >= min);
      }
    }

    return filtered;
  }, [allProducts, selectedCategory, priceRange]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleCategoryChange = (categoryId) => {
    setSelectedCategory(categoryId);
  };

  const handlePriceRangeChange = (range) => {
    setPriceRange(range);
  };

  const handleResetFilters = () => {
    setSelectedCategory('');
    setPriceRange('');
  };

  return (
    <section className="py-16 bg-white">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-4xl font-bold text-dark mb-4">
            –ù–∞—à–∏ –ü—Ä–æ–¥—É–∫—Ç—ã
          </h2>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –®–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ª–æ—Ñ—Ç –ø–µ—Ä–µ–≥–æ—Ä–æ–¥–æ–∫ –¥–ª—è –ª—é–±–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è
          </p>
        </div>

        <div className="flex flex-col lg:flex-row gap-8">
          {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ */}
          <div className="lg:w-1/4">
            <ProductFilters
              categories={categories}
              selectedCategory={selectedCategory}
              onCategoryChange={handleCategoryChange}
              priceRange={priceRange}
              onPriceRangeChange={handlePriceRange}
              onResetFilters={handleResetFilters}
            />
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          <div className="lg:w-3/4">
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ */}
            <div className="flex justify-between items-center mb-6">
              <div>
                <span className="text-gray-600">
                  –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {' '}
                  <strong className="text-dark">{filteredProducts.length}</strong>
                </span>

                {/* –ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
                {(selectedCategory || priceRange) && (
                  <div className="mt-2 flex flex-wrap gap-2">
                    {selectedCategory && (
                      <span className="inline-flex items-center bg-primary text-white text-xs px-2 py-1 rounded">
                        –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {categories.find(c => c.id.toString() === selectedCategory)?.name}
                        <button
                          onClick={() => setSelectedCategory('')}
                          className="ml-1 hover:text-gray-200"
                        >
                          √ó
                        </button>
                      </span>
                    )}
                    {priceRange && (
                      <span className="inline-flex items-center bg-accent text-white text-xs px-2 py-1 rounded">
                        –¶–µ–Ω–∞: {priceRange === '0-20000' ? '–î–æ 20,000 ‚ÇΩ' :
                               priceRange === '20000-40000' ? '20,000-40,000 ‚ÇΩ' :
                               '–û—Ç 40,000 ‚ÇΩ'}
                        <button
                          onClick={() => setPriceRange('')}
                          className="ml-1 hover:text-gray-200"
                        >
                          √ó
                        </button>
                      </span>
                    )}
                  </div>
                )}
              </div>
            </div>

            {/* –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ */}
            {(productsLoading || categoriesLoading) && <LoadingSpinner />}

            {/* –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏ */}
            {productsError && (
              <div className="text-center text-red-600 py-8">
                <p>{productsError}</p>
              </div>
            )}

            {/* –°–µ—Ç–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ */}
            {!productsLoading && !categoriesLoading && !productsError && (
              <>
                {filteredProducts.length > 0 ? (
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-6">
                    {filteredProducts.map((product) => (
                      <ProductCard key={product.id} product={product} />
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-12">
                    <div className="text-6xl mb-4">üîç</div>
                    <h3 className="text-xl font-semibold text-dark mb-2">
                      –ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                    </h3>
                    <p className="text-gray-600 mb-4">
                      –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    </p>
                    <button
                      onClick={handleResetFilters}
                      className="btn-primary"
                    >
                      –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                    </button>
                  </div>
                )}
              </>
            )}
          </div>
        </div>
      </div>
    </section>
  );
};

export default ProductsSection;